//>>built
define("dojo/_base/kernel",["../has","./config","require","module"],function(g,h,k,c){var f,b;f=function(){return this}();var d={},m={},a={config:h,global:f,dijit:d,dojox:m},d={dojo:["dojo",a],dijit:["dijit",d],dojox:["dojox",m]};c=k.map&&k.map[c.id.match(/[^\/]+/)[0]];for(b in c)d[b]?d[b][0]=c[b]:d[b]=[c[b],{}];for(b in d)c=d[b],c[1]._scopeName=c[0],h.noGlobals||(f[c[0]]=c[1]);a.scopeMap=d;a.baseUrl=a.config.baseUrl=k.baseUrl;a.isAsync=k.async;a.locale=h.locale;f="$Rev: 91fa0cb $".match(/[0-9a-f]{7,}/);
a.version={major:1,minor:11,patch:2,flag:"",revision:f?f[0]:NaN,toString:function(){var e=a.version;return e.major+"."+e.minor+"."+e.patch+e.flag+" ("+e.revision+")"}};g("csp-restrictions")||Function("d","d.eval \x3d function(){return d.global.eval ? d.global.eval(arguments[0]) : eval(arguments[0]);}")(a);a.exit=function(){};g("host-webworker");g.add("console-as-object",function(){return Function.prototype.bind&&console&&"object"===typeof console.log});"undefined"!=typeof console||(console={});c=
"assert count debug dir dirxml error group groupEnd info profile profileEnd time timeEnd trace warn log".split(" ");var l;for(f=0;l=c[f++];)console[l]?g("console-as-object")&&(console[l]=Function.prototype.bind.call(console[l],console)):function(){var e=l+"";console[e]="log"in console?function(){var a=Array.prototype.slice.call(arguments);a.unshift(e+":");console.log(a.join(" "))}:function(){};console[e]._fake=!0}();a.deprecated=a.experimental=function(){};a.deprecated=function(a,c,b){a="DEPRECATED: "+
a;c&&(a+=" "+c);b&&(a+=" -- will be removed in version: "+b);console.warn(a)};a.experimental=function(a,c){var b="EXPERIMENTAL: "+a+" -- APIs subject to change without notice.";c&&(b+=" "+c);console.warn(b)};if(h.modulePaths){a.deprecated("dojo.modulePaths","use paths configuration");g={};for(b in h.modulePaths)g[b.replace(/\./g,"/")]=h.modulePaths[b];k({paths:g})}a.moduleUrl=function(c,b){a.deprecated("dojo.moduleUrl()","use require.toUrl","2.0");var d=null;c&&(d=k.toUrl(c.replace(/\./g,"/")+(b?
"/"+b:"")+"/*.*").replace(/\/\*\.\*/,"")+(b?"":"/"));return d};a._hasResource={};return a});
/// kernel.js.map